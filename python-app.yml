name: Python应用测试

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, '3.10']

    steps:
    - uses: actions/checkout@v2
    
    - name: 设置Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: 安装依赖
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-cov flake8
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    
    - name: 代码风格检查
      run: |
        # 停止构建，如果Python语法错误或未定义名称
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # 仅作为警告的退出0的所有Python风格问题
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    - name: 创建测试目录
      run: |
        mkdir -p uploads

    - name: 运行测试
      run: |
        pytest --cov=. --cov-report=xml
    
    - name: 上传覆盖率报告
      uses: codecov/codecov-action@v1
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  build:
    needs: test
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
    
    - name: 构建Docker镜像
      run: docker build -t picui .
    
    - name: 测试Docker镜像
      run: |
        docker run -d -p 8000:8000 --name picui-test picui
        sleep 5
        curl -s http://localhost:8000/health | grep "healthy" || exit 1 